https://blog.csdn.net/lmxmimihuhu/article/details/39404169


https://blog.csdn.net/bobodem/article/details/80187558


https://blog.csdn.net/alvine008/article/details/50913250


http://www.runoob.com/go/go-slice.html

Array是固定长的，即使在声明初始化时未指定size，其长度是根据初始化时指定的元素个数决定的。
例如：
[5] int {1,2,3,4,5}
长度为5的数组，其元素值依次为：1，2，3，4，5
[5] int {1,2}
长度为5的数组，其元素值依次为：1，2，0，0，0 。在初始化时没有指定初值的元素将会赋值为其元素类型int的默认值0,string的默认值是"" 

[...] int {1,2,3,4,5}
长度为5的数组，其长度是根据初始化时指定的元素个数决定的 
[5] int { 2:1,3:2,4:3}
长度为5的数组，key:value,其元素值依次为：0，0，1，2，3。在初始化时指定了2，3，4索引中对应的值：1，2，3 
[...] int {2:1,4:3}
长度为5的数组，起元素值依次为：0，0，1，0，3。由于指定了最大索引4对应的值3，根据初始化的元素个数确定其长度为5赋值与使用


而Slice，是一种“动态数组”
数组的长度不可改变，在特定场景中这样的集合就不太适用，Go中提供了一种灵活，功能强悍的内置类型Slices切片(“动态数组"),与数组相比切片的长度是不固定的，可以追加元素，在追加时可能使切片的容量增大。切片中有两个概念：一是len长度，二是cap容量，长度是指已经被赋过值的最大下标+1，可通过内置函数len()获得。容量是指切片目前可容纳的最多元素个数，可通过内置函数cap()获得。切片是引用类型，因此在当传递切片时将引用同一指针，修改值将会影响其他的对象。 
